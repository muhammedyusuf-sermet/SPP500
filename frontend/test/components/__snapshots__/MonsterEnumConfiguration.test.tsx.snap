// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Monster Creation Small snapshot matches snapshot 1`] = `
<WithStyles(ExpansionPanel)
  CollapseProps={
    Object {
      "timeout": 100,
    }
  }
  defaultExpanded={true}
>
  <WithStyles(ExpansionPanelSummary)
    expandIcon={<pure(ExpandMoreIcon) />}
  >
    <WithStyles(Typography)
      className="heading"
    >
      Basic Configurations
    </WithStyles(Typography)>
  </WithStyles(ExpansionPanelSummary)>
  <WithStyles(ExpansionPanelDetails)>
    <WithStyles(Grid)
      container={true}
      spacing={8}
    >
      <WithStyles(Grid)
        item={true}
        xs={4}
      >
        <WithStyles(FormControl)
          className="formControl"
          disabled={false}
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Type"
          >
            Type
          </WithStyles(WithFormControlContext(InputLabel))>
          <EnumDropdown
            disabled={false}
            name="Type"
            onChange={[Function]}
            options={
              Array [
                "Beast",
                "Dragon",
                "Monstrosity",
                "Humanoid",
                "Fiend",
                "Undead",
                "Giant",
                "Elemental",
                "SwarmOfTinyBeasts",
                "Construct",
                "Celestial",
                "Aberration",
                "Fey",
                "Plant",
                "Ooze",
              ]
            }
          />
          <WithStyles(WithFormControlContext(FormHelperText))
            error={true}
            id="Type-helper-text"
          />
          <WithStyles(Tooltip)
            disableFocusListener={true}
            title="Creature types are rough categories of creatures which determine the way game mechanics affect the creature. The choice of type is important, as all creatures which have a given type will share certain characteristics (with some exceptions)."
          >
            <withHelpersModifiers(Help)
              className="tooltip"
            >
              Hover for More About Monster Type
            </withHelpersModifiers(Help)>
          </WithStyles(Tooltip)>
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={4}
      >
        <WithStyles(FormControl)
          className="formControl"
          disabled={false}
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Size"
          >
            Size
          </WithStyles(WithFormControlContext(InputLabel))>
          <EnumDropdown
            disabled={false}
            name="Size"
            onChange={[Function]}
            options={
              Array [
                "Tiny",
                "Small",
                "Medium",
                "Large",
                "Huge",
                "Gargantuan",
              ]
            }
          />
          <WithStyles(WithFormControlContext(FormHelperText))
            error={true}
            id="Size-helper-text"
          />
          <WithStyles(Tooltip)
            disableFocusListener={true}
            title="A creature's size determines how much space it occupies on squares or hexes, as shown in the Creature Size and Space table. If the miniature you use for a monster takes up an amount of space different from what's on the table, that's fine, but treat the monster as its official size for all other rules."
          >
            <withHelpersModifiers(Help)
              className="tooltip"
            >
              Hover for More About Monster Size
            </withHelpersModifiers(Help)>
          </WithStyles(Tooltip)>
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={4}
      >
        <WithStyles(FormControl)
          className="formControl"
          disabled={false}
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Race"
          >
            Race
          </WithStyles(WithFormControlContext(InputLabel))>
          <EnumDropdown
            disabled={false}
            name="Race"
            onChange={[Function]}
            options={
              Array [
                "AnyRace",
                "Devil",
                "Demon",
                "Human",
                "Shapechanger",
                "Goblinoid",
                "Titan",
                "Gnoll",
                "Gnome",
                "Dwarf",
                "Elf",
                "Orc",
                "Kobold",
                "Lizardfolk",
                "Merfolk",
                "Sahuagin",
                "Grimlock",
              ]
            }
          />
          <WithStyles(WithFormControlContext(FormHelperText))
            error={true}
            id="Race-helper-text"
          />
          <WithStyles(Tooltip)
            disableFocusListener={true}
            title="A character race is a fundamental part of the identity and nature of characters in the Dungeons & Dragons role-playing game. Each race has a distinct appearance, behavior and often range of statistics associated with it. See your DM handbook for more information."
          >
            <withHelpersModifiers(Help)
              className="tooltip"
            >
              Hover for More About Monster Race
            </withHelpersModifiers(Help)>
          </WithStyles(Tooltip)>
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(FormControl)
          className="formControl"
          disabled={false}
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Alignment"
          >
            Alignment
          </WithStyles(WithFormControlContext(InputLabel))>
          <EnumDropdown
            disabled={false}
            name="Alignment"
            onChange={[Function]}
            options={
              Array [
                "Unaligned",
                "AnyAlignment",
                "AnyNonGoodAlignment",
                "AnyNonEvilAlignment",
                "AnyNonLawfulAlignment",
                "AnyNonChaoticAlignment",
                "AnyGoodAlignment",
                "AnyEvilAlignment",
                "AnyLawfulAlignment",
                "AnyChaoticAlignment",
                "AnyNeutralAlignment",
                "LawfulGood",
                "LawfulNeutral",
                "LawfulEvil",
                "NeutralGood",
                "Neutral",
                "NeutralEvil",
                "ChaoticGood",
                "ChaoticNeutral",
                "ChaoticEvil",
              ]
            }
          />
          <WithStyles(WithFormControlContext(FormHelperText))
            error={true}
            id="Alignment-helper-text"
          />
          <WithStyles(Tooltip)
            disableFocusListener={true}
            title="Alignment is a categorization of the ethical and moral perspective of player characters, non-player characters, and creatures. Most versions of the game feature a system in which players make two choices for characters. One is the character's views on 'law' vs 'chaos', the other on 'good' vs 'evil'."
          >
            <withHelpersModifiers(Help)
              className="tooltip"
            >
              Hover for More About Monster Alignment
            </withHelpersModifiers(Help)>
          </WithStyles(Tooltip)>
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(FormControl)
          className="formControl"
          disabled={false}
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Environment"
          >
            Environment
          </WithStyles(WithFormControlContext(InputLabel))>
          <EnumDropdown
            disabled={false}
            name="Environment"
            onChange={[Function]}
            options={
              Array [
                "Arctic",
                "Coastal",
                "Desert",
                "Forest",
                "Grassland",
                "Hill",
                "Mountain",
                "Swamp",
                "Underdark",
                "Underwater",
                "Urban",
              ]
            }
          />
          <WithStyles(WithFormControlContext(FormHelperText))
            error={true}
            id="Environment-helper-text"
          />
          <WithStyles(Tooltip)
            disableFocusListener={true}
            title="Monster environment is the type of environment that the monster is most likely to be found in."
          >
            <withHelpersModifiers(Help)
              className="tooltip"
            >
              Hover for More About Monster Environment
            </withHelpersModifiers(Help)>
          </WithStyles(Tooltip)>
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ExpansionPanelDetails)>
</WithStyles(ExpansionPanel)>
`;

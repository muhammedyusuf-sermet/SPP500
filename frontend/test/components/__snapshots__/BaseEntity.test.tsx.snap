// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Base Entity Small snapshot matches snapshot 1`] = `
<WithStyles(ExpansionPanel)
  CollapseProps={
    Object {
      "timeout": 100,
    }
  }
>
  <WithStyles(ExpansionPanelSummary)
    expandIcon={<pure(ExpandMoreIcon) />}
  >
    <WithStyles(Grid)
      container={true}
      spacing={8}
    >
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(Typography)
          id="Name"
          variant="h6"
        >
          Test Name
        </WithStyles(Typography)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(Typography)
          className="body1"
          id="Initiative"
        >
          Initative: 0
        </WithStyles(Typography)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(Typography)
          className="body1"
          id="ArmorClass"
        >
          AC: 124
        </WithStyles(Typography)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={6}
      >
        <WithStyles(Typography)
          className="body1"
          id="HitPoints"
        >
          HP: 623/623
        </WithStyles(Typography)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(Typography)
          className="body1"
          id="Conditions"
        />
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ExpansionPanelSummary)>
  <WithStyles(ExpansionPanelDetails)>
    <WithStyles(Grid)
      container={true}
      spacing={8}
    >
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(FormControl)
          className="formControl"
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="CurrentHitPoints"
          >
            Current HP
          </WithStyles(WithFormControlContext(InputLabel))>
          <WithStyles(Input)
            id="CurrentHitPoints"
            name="CurrentHitPoints"
            onChange={[Function]}
            type="number"
            value={623}
          />
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(FormControl)
          className="formControl"
          fullWidth={true}
        >
          <WithStyles(WithFormControlContext(InputLabel))
            htmlFor="Temporary"
          >
            Temporary HP
          </WithStyles(WithFormControlContext(InputLabel))>
          <WithStyles(Input)
            id="Temporary"
            name="Temporary"
            onChange={[Function]}
            type="number"
            value={0}
          />
        </WithStyles(FormControl)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Blinded"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Blinded"
              onChange={[Function]}
              value="Blinded"
            />
          }
          label="Blinded"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Charmed"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Charmed"
              onChange={[Function]}
              value="Charmed"
            />
          }
          label="Charmed"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Deafened"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Deafened"
              onChange={[Function]}
              value="Deafened"
            />
          }
          label="Deafened"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Frightened"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Frightened"
              onChange={[Function]}
              value="Frightened"
            />
          }
          label="Frightened"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Grappled"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Grappled"
              onChange={[Function]}
              value="Grappled"
            />
          }
          label="Grappled"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Incapacitated"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Incapacitated"
              onChange={[Function]}
              value="Incapacitated"
            />
          }
          label="Incapacitated"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Invisible"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Invisible"
              onChange={[Function]}
              value="Invisible"
            />
          }
          label="Invisible"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Paralyzed"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Paralyzed"
              onChange={[Function]}
              value="Paralyzed"
            />
          }
          label="Paralyzed"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Petrified"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Petrified"
              onChange={[Function]}
              value="Petrified"
            />
          }
          label="Petrified"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Poisoned"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Poisoned"
              onChange={[Function]}
              value="Poisoned"
            />
          }
          label="Poisoned"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Prone"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Prone"
              onChange={[Function]}
              value="Prone"
            />
          }
          label="Prone"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Restrained"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Restrained"
              onChange={[Function]}
              value="Restrained"
            />
          }
          label="Restrained"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Stunned"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Stunned"
              onChange={[Function]}
              value="Stunned"
            />
          }
          label="Stunned"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        key="Unconscious"
        lg={6}
        md={12}
        sm={3}
        xl={4}
        xs={6}
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Switch)
              checked={false}
              color="primary"
              id="Unconscious"
              onChange={[Function]}
              value="Unconscious"
            />
          }
          label="Unconscious"
          labelPlacement="start"
        />
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(Button)
          id="View0"
          onClick={[MockFunction]}
          value={0}
          variant="contained"
        >
          View
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ExpansionPanelDetails)>
</WithStyles(ExpansionPanel)>
`;
